import subprocess
import os
import signal
import xmlrpclib
from datetime import datetime
from celery import Celery

app = Celery('tasks', broker='amqp://<%=rabbit_user%>:<%=rabbit_pass%>@<%=rabbit_ip%>/<%=rabbit_vhost%>')
proxy = xmlrpclib.ServerProxy("http://<%=user_ip%>:1138/")

nb_tasks = 0
first = True
last_second = 0

command = 'celery -A tasks worker --loglevel=info -n <%=worker_name%> --concurrency=<%=concurrency%> -Q <%=consume_queue%>'
process = subprocess.Popen(command, stderr=subprocess.PIPE, stdout=subprocess.PIPE, shell=True)

try:
    for line in iter(process.stderr.readline, ''):
        if 'tasks.read_nosql' in line and 'succeeded' in line:
            line_time = line[1:24]
    	    nb_tasks += 1
    	    dt = datetime.strptime(line_time, '%Y-%m-%d %H:%M:%S,%f')
    	    if first:
    	        first_dt = dt
    	        first = False
    	    diff = dt - first_dt
            ratio = nb_tasks/(diff.seconds + 1.0)

            if (diff.seconds + 1) % 5 == 0 and  diff.seconds + 1 != last_second:
                proxy.report_ratio("<%=worker_name%>", ratio)
            last_second = diff.seconds + 1

	if 'tasks.write_nosql' in line and 'succeeded' in line:
	    print 'write'

	if 'tasks.start_consuming' in line and 'succeeded' in line:
	    proxy.report_ping("<%=worker_name%>")

	if 'tasks.stop_consuming' in line and 'succeeded' in line:
	    proxy.report_pong("<%=worker_name%>")
	    os.killpg(process.pid, signal.SIGTERM)

except KeyboardInterrupt:
    os.killpg(process.pid, signal.SIGTERM)
except Exception as e:
    print e
    os.killpg(process.pid, signal.SIGTERM)
